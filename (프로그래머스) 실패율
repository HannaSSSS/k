#include <iostream>
#include <string>
#include <vector>
#include <algorithm>

using namespace std;
bool cmp(const pair<double, int> &a, const pair<double, int> &b){
     if(a.first==b.first){
         return a.second<b.second;
     }
     return a.first > b.first;
 }
vector<int> solution(int N, vector<int> stages) {

  int n=N;//스테이지갯수5
  vector<pair<double,int>>realstages;  
  int size=stages.size();//사람수8
    vector<int> answer;
    
    for(int j=1;j<=n;j++){//
    int sum=0;   
   for(int i=0;i<stages.size();i++){
        if(j==stages[i])
        sum++;       
    }   
        
    if(sum==0&&j!=n+1){
        
        /*push_back(make_pair(sum/size,j)*/
    realstages.push_back(make_pair(0,j));}//해당 스테이지에 멈춰있는 사람없음
    if(sum!=0&&size!=0) {
   realstages.push_back(make_pair((double)sum/size,j));}//멈춰있는 사람있음
        
        
    size-=sum;
    }
    
        

    
sort(realstages.begin(), realstages.end(), cmp);//내림차순정렬
    
        
for(int i=0;i<n;i++){
answer.push_back(realstages[i].second);  
}
    
    
    return answer;
}
