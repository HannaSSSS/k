#include <iostream>
#include <algorithm>
#include <utility>
#include <queue>
#include <string>
#include <stack>
#include <cmath>
#include <map>
#include <vector>
#include <iomanip>
using namespace std;
int m,n;
int result[101]={0,};//
int mmap[101][101]={0,};

void bfs(int start){
	bool visit[101]={0,};//
	int rresult[101]={0,}; 
	queue <int>q;
	q.push(start);
	visit[start]=true;
	while(!q.empty()){
		int x=q.front();
		q.pop();
		
		for(int i=1;i<=n;i++){
			if(!visit[i]&&mmap[x][i]==1){
				rresult[i]=rresult[x]+1;
                visit[i]=true;
			q.push(i);
			}
		}
	}
	int sum=0;
	for(int j=1;j<=n;j++){
	sum+=rresult[j];
	}
	result[start]=sum;
}


int main(){

cin>>n>>m;
for(int i=0;i<m;i++){
	int a,b;
	cin>>a>>b;
	mmap[a][b]=1;
	mmap[b][a]=1;
}


int min=987654321;
int result2=0;

for(int i=1;i<=n;i++){
	bfs(i);
	


}
    for(int j=1;j<=n;j++){
		if(min>result[j]){
			min=result[j];
			result2=j;
		}}
cout<<result2<<endl;

	return 0;
}
